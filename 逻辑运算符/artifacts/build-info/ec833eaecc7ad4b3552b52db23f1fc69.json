{
	"id": "ec833eaecc7ad4b3552b52db23f1fc69",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"逻辑运算符/solidityTest.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract LogicalOperations {\r\n    bool private a;\r\n    bool private b;\r\n\r\n    constructor() public {\r\n        a = true;\r\n        b = false;\r\n    }\r\n\r\n    function andOperation() public view returns (bool) {\r\n        return a && b;\r\n    }\r\n\r\n    function orOperation() public view returns (bool) {\r\n        return a || b;\r\n    }\r\n\r\n    function notOperation() public view returns (bool) {\r\n        return !a;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"逻辑运算符/solidityTest.sol": {
				"LogicalOperations": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "andOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "notOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "orOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":60:477  contract LogicalOperations {\r... */\n  mstore(0x40, 0x80)\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":138:206  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":174:178  true */\n  0x01\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":170:171  a */\n  0x00\n  dup1\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":170:178  a = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":193:198  false */\n  0x00\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":189:190  b */\n  dup1\n  0x01\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":189:198  b = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":60:477  contract LogicalOperations {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":60:477  contract LogicalOperations {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e94c8d6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x420c1e6c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x541e34f3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":214:297  function andOperation() public view returns (bool) {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":395:474  function notOperation() public view returns (bool) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":305:387  function orOperation() public view returns (bool) {\r... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":214:297  function andOperation() public view returns (bool) {\r... */\n    tag_7:\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":259:263  bool */\n      0x00\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":283:284  a */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":283:289  a && b */\n      dup1\n      iszero\n      tag_17\n      jumpi\n      pop\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":288:289  b */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":283:289  a && b */\n    tag_17:\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":276:289  return a && b */\n      swap1\n      pop\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":214:297  function andOperation() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":395:474  function notOperation() public view returns (bool) {\r... */\n    tag_11:\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":440:444  bool */\n      0x00\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":465:466  a */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":464:466  !a */\n      iszero\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":457:466  return !a */\n      swap1\n      pop\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":395:474  function notOperation() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":305:387  function orOperation() public view returns (bool) {\r... */\n    tag_14:\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":349:353  bool */\n      0x00\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":373:374  a */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":373:379  a || b */\n      dup1\n      tag_20\n      jumpi\n      pop\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":378:379  b */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":373:379  a || b */\n    tag_20:\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":366:379  return a || b */\n      swap1\n      pop\n        /* \"\\xe9\\x80\\xbb\\xe8\\xbe\\x91\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe7\\xac\\xa6/solidityTest.sol\":305:387  function orOperation() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_22:\n        /* \"#utility.yul\":88:109   */\n      tag_24\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:332   */\n    tag_9:\n        /* \"#utility.yul\":209:213   */\n      0x00\n        /* \"#utility.yul\":247:249   */\n      0x20\n        /* \"#utility.yul\":236:245   */\n      dup3\n        /* \"#utility.yul\":232:250   */\n      add\n        /* \"#utility.yul\":224:250   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:325   */\n      tag_27\n        /* \"#utility.yul\":322:323   */\n      0x00\n        /* \"#utility.yul\":311:320   */\n      dup4\n        /* \"#utility.yul\":307:324   */\n      add\n        /* \"#utility.yul\":298:304   */\n      dup5\n        /* \"#utility.yul\":260:325   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":122:332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":338:428   */\n    tag_25:\n        /* \"#utility.yul\":372:379   */\n      0x00\n        /* \"#utility.yul\":415:420   */\n      dup2\n        /* \"#utility.yul\":408:421   */\n      iszero\n        /* \"#utility.yul\":401:422   */\n      iszero\n        /* \"#utility.yul\":390:422   */\n      swap1\n      pop\n        /* \"#utility.yul\":338:428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bcb7a10834e7b3edbff117a1842cb81620bc914f9d3bb5c69d8555ae6aee0d3f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060016000806101000a81548160ff02191690831515021790555060008060016101000a81548160ff02191690831515021790555061017e806100546000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e94c8d614610046578063420c1e6c14610064578063541e34f314610082575b600080fd5b61004e6100a0565b60405161005b9190610121565b60405180910390f35b61006c6100ce565b6040516100799190610121565b60405180910390f35b61008a6100e5565b6040516100979190610121565b60405180910390f35b60008060009054906101000a900460ff1680156100c95750600060019054906101000a900460ff165b905090565b60008060009054906101000a900460ff1615905090565b60008060009054906101000a900460ff168061010d5750600060019054906101000a900460ff165b905090565b61011b8161013c565b82525050565b60006020820190506101366000830184610112565b92915050565b6000811515905091905056fea2646970667358221220bcb7a10834e7b3edbff117a1842cb81620bc914f9d3bb5c69d8555ae6aee0d3f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17E DUP1 PUSH2 0x54 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE94C8D6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x420C1E6C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x541E34F3 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xC9 JUMPI POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x10D JUMPI POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11B DUP2 PUSH2 0x13C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xB7 LOG1 ADDMOD CALLVALUE 0xE7 0xB3 0xED 0xBF CALL OR LOG1 DUP5 0x2C 0xB8 AND KECCAK256 0xBC SWAP2 0x4F SWAP14 EXTCODESIZE 0xB5 0xC6 SWAP14 DUP6 SSTORE 0xAE PUSH11 0xEE0D3F64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "60:417:0:-:0;;;138:68;;;;;;;;;;174:4;170:1;;:8;;;;;;;;;;;;;;;;;;193:5;189:1;;:9;;;;;;;;;;;;;;;;;;60:417;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@andOperation_27": {
									"entryPoint": 160,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@notOperation_46": {
									"entryPoint": 206,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@orOperation_37": {
									"entryPoint": 229,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "307:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "260:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "209:4:1",
														"type": ""
													}
												],
												"src": "122:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "390:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "415:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "408:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "390:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "362:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "372:7:1",
														"type": ""
													}
												],
												"src": "338:90:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630e94c8d614610046578063420c1e6c14610064578063541e34f314610082575b600080fd5b61004e6100a0565b60405161005b9190610121565b60405180910390f35b61006c6100ce565b6040516100799190610121565b60405180910390f35b61008a6100e5565b6040516100979190610121565b60405180910390f35b60008060009054906101000a900460ff1680156100c95750600060019054906101000a900460ff165b905090565b60008060009054906101000a900460ff1615905090565b60008060009054906101000a900460ff168061010d5750600060019054906101000a900460ff165b905090565b61011b8161013c565b82525050565b60006020820190506101366000830184610112565b92915050565b6000811515905091905056fea2646970667358221220bcb7a10834e7b3edbff117a1842cb81620bc914f9d3bb5c69d8555ae6aee0d3f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE94C8D6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x420C1E6C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x541E34F3 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xC9 JUMPI POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x10D JUMPI POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11B DUP2 PUSH2 0x13C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xB7 LOG1 ADDMOD CALLVALUE 0xE7 0xB3 0xED 0xBF CALL OR LOG1 DUP5 0x2C 0xB8 AND KECCAK256 0xBC SWAP2 0x4F SWAP14 EXTCODESIZE 0xB5 0xC6 SWAP14 DUP6 SSTORE 0xAE PUSH11 0xEE0D3F64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "60:417:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;214:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;395:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;305:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;214:83;259:4;283:1;;;;;;;;;;;:6;;;;;288:1;;;;;;;;;;;283:6;276:13;;214:83;:::o;395:79::-;440:4;465:1;;;;;;;;;;;464:2;457:9;;395:79;:::o;305:82::-;349:4;373:1;;;;;;;;;;;:6;;;;378:1;;;;;;;;;;;373:6;366:13;;305:82;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:210::-;209:4;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;122:210;;;;:::o;338:90::-;372:7;415:5;408:13;401:21;390:32;;338:90;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "76400",
								"executionCost": "48707",
								"totalCost": "125107"
							},
							"external": {
								"andOperation()": "4668",
								"notOperation()": "2482",
								"orOperation()": "4709"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 477,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 206,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 138,
									"end": 206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 174,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 171,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 170,
									"end": 178,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 170,
									"end": 178,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 170,
									"end": 178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 193,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 189,
									"end": 190,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 189,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 189,
									"end": 198,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 189,
									"end": 198,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 477,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 477,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 477,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 477,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bcb7a10834e7b3edbff117a1842cb81620bc914f9d3bb5c69d8555ae6aee0d3f64736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "E94C8D6"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "420C1E6C"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "541E34F3"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 283,
											"end": 284,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 283,
											"end": 284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 283,
											"end": 289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 283,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 283,
											"end": 289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 283,
											"end": 289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 283,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 283,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 276,
											"end": 289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 297,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 465,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 457,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 374,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 373,
											"end": 374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 373,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 378,
											"end": 379,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 378,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 378,
											"end": 379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 232,
											"end": 250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"andOperation()": "0e94c8d6",
							"notOperation()": "420c1e6c",
							"orOperation()": "541e34f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"andOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u903b\\u8f91\\u8fd0\\u7b97\\u7b26/solidityTest.sol\":\"LogicalOperations\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u903b\\u8f91\\u8fd0\\u7b97\\u7b26/solidityTest.sol\":{\"keccak256\":\"0xfbdfed97b59a606ab0db021e1ed09695ff387a06e2dae3e8384d476e4ac7d4ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f25370c2a7d98870e91ff680d9919c0a2b34dbdda49ecf4f8c35404541e79390\",\"dweb:/ipfs/QmYgodptZ9BA223MN952Lzj8sYU3W3MwVmLf9HS7SMML3h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "逻辑运算符/solidityTest.sol:LogicalOperations",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 5,
								"contract": "逻辑运算符/solidityTest.sol:LogicalOperations",
								"label": "b",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> 逻辑运算符/solidityTest.sol:8:5:\n  |\n8 |     constructor() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 206,
					"file": "逻辑运算符/solidityTest.sol",
					"start": 138
				},
				"type": "Warning"
			}
		],
		"sources": {
			"逻辑运算符/solidityTest.sol": {
				"ast": {
					"absolutePath": "逻辑运算符/solidityTest.sol",
					"exportedSymbols": {
						"LogicalOperations": [
							47
						]
					},
					"id": 48,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "LogicalOperations",
							"nameLocation": "69:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "107:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "94:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "94:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "128:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "115:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "115:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "159:47:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "174:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "170:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "170:8:0"
											},
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "189:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "189:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "189:9:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:0:0"
									},
									"scope": 47,
									"src": "138:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "265:32:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 22,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 23,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 21,
												"id": 25,
												"nodeType": "Return",
												"src": "276:13:0"
											}
										]
									},
									"functionSelector": "0e94c8d6",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "andOperation",
									"nameLocation": "223:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "259:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "259:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:6:0"
									},
									"scope": 47,
									"src": "214:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "355:32:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 33,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "373:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 31,
												"id": 35,
												"nodeType": "Return",
												"src": "366:13:0"
											}
										]
									},
									"functionSelector": "541e34f3",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "orOperation",
									"nameLocation": "314:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "349:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:6:0"
									},
									"scope": 47,
									"src": "305:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "446:28:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "464:2:0",
													"subExpression": {
														"id": 42,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "465:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 41,
												"id": 44,
												"nodeType": "Return",
												"src": "457:9:0"
											}
										]
									},
									"functionSelector": "420c1e6c",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notOperation",
									"nameLocation": "404:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "440:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "440:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:6:0"
									},
									"scope": 47,
									"src": "395:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "60:417:0",
							"usedErrors": []
						}
					],
					"src": "33:444:0"
				},
				"id": 0
			}
		}
	}
}