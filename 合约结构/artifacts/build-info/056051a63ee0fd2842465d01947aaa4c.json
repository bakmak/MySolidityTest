{
	"id": "056051a63ee0fd2842465d01947aaa4c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"合约结构/SolidityStructure.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.0;     //  版本声明\r\n\r\ncontract SolidityStructure {    //  合约声明\r\n\r\n    uint balance;   //  状态变量\r\n\r\n    address owner;\r\n\r\n    struct Hello {  //  结构类型\r\n        uint helloNum;\r\n        address hello;\r\n    }\r\n\r\n    constructor() public {  //  构造函数\r\n        owner = msg.sender;\r\n    }\r\n    // function HelloWorld() {\r\n    // }   //  这种方式也可以\r\n\r\n    modifier onlySeller() { //  修饰器\r\n        require(\r\n            msg.sender != owner\r\n        );\r\n        _;\r\n    }\r\n\r\n    function test() public {    //  函数\r\n        uint step = 10;\r\n        if (owner == msg.sender) {\r\n            balance = balance + step;\r\n        }\r\n    }\r\n\r\n    //  带返回值的函数\r\n    function update(uint amount) constant returns(address, uint) {\r\n        balance += amount;\r\n        return (msg.sender, balance);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"合约结构/SolidityStructure.sol": {
				"SolidityStructure": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "update",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "test",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"合约结构/SolidityStructure.sol\":81:919  contract SolidityStructure {    //  合约声明\r... */\n  mstore(0x40, 0x80)\n    /* \"合约结构/SolidityStructure.sol\":294:370  constructor() public {  //  构造函数\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"合约结构/SolidityStructure.sol\":294:370  constructor() public {  //  构造函数\r... */\n  pop\n    /* \"合约结构/SolidityStructure.sol\":352:362  msg.sender */\n  caller\n    /* \"合约结构/SolidityStructure.sol\":344:349  owner */\n  0x1\n  0x0\n    /* \"合约结构/SolidityStructure.sol\":344:362  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"合约结构/SolidityStructure.sol\":81:919  contract SolidityStructure {    //  合约声明\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"合约结构/SolidityStructure.sol\":81:919  contract SolidityStructure {    //  合约声明\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x82ab890a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"合约结构/SolidityStructure.sol\":770:906  function update(uint amount) constant returns(address, uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"合约结构/SolidityStructure.sol\":770:906  function update(uint amount) constant returns(address, uint) {\r... */\n      pop\n      tag_5\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"合约结构/SolidityStructure.sol\":575:731  function test() public {    //  函数\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"合约结构/SolidityStructure.sol\":575:731  function test() public {    //  函数\r... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"合约结构/SolidityStructure.sol\":770:906  function update(uint amount) constant returns(address, uint) {\r... */\n    tag_6:\n        /* \"合约结构/SolidityStructure.sol\":816:823  address */\n      0x0\n        /* \"合约结构/SolidityStructure.sol\":825:829  uint */\n      dup1\n        /* \"合约结构/SolidityStructure.sol\":853:859  amount */\n      dup3\n        /* \"合约结构/SolidityStructure.sol\":842:849  balance */\n      0x0\n      dup1\n        /* \"合约结构/SolidityStructure.sol\":842:859  balance += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"合约结构/SolidityStructure.sol\":878:888  msg.sender */\n      caller\n        /* \"合约结构/SolidityStructure.sol\":890:897  balance */\n      sload(0x0)\n        /* \"合约结构/SolidityStructure.sol\":870:898  return (msg.sender, balance) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"合约结构/SolidityStructure.sol\":770:906  function update(uint amount) constant returns(address, uint) {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"合约结构/SolidityStructure.sol\":575:731  function test() public {    //  函数\r... */\n    tag_9:\n        /* \"合约结构/SolidityStructure.sol\":623:632  uint step */\n      0x0\n        /* \"合约结构/SolidityStructure.sol\":635:637  10 */\n      0xa\n        /* \"合约结构/SolidityStructure.sol\":623:637  uint step = 10 */\n      swap1\n      pop\n        /* \"合约结构/SolidityStructure.sol\":661:671  msg.sender */\n      caller\n        /* \"合约结构/SolidityStructure.sol\":652:671  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"合约结构/SolidityStructure.sol\":652:657  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"合约结构/SolidityStructure.sol\":652:671  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"合约结构/SolidityStructure.sol\":648:724  if (owner == msg.sender) {\r... */\n      iszero\n      tag_12\n      jumpi\n        /* \"合约结构/SolidityStructure.sol\":708:712  step */\n      dup1\n        /* \"合约结构/SolidityStructure.sol\":698:705  balance */\n      sload(0x0)\n        /* \"合约结构/SolidityStructure.sol\":698:712  balance + step */\n      add\n        /* \"合约结构/SolidityStructure.sol\":688:695  balance */\n      0x0\n        /* \"合约结构/SolidityStructure.sol\":688:712  balance = balance + step */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"合约结构/SolidityStructure.sol\":648:724  if (owner == msg.sender) {\r... */\n    tag_12:\n        /* \"合约结构/SolidityStructure.sol\":575:731  function test() public {    //  函数\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582002c1bb7d271edfeb7e7e6113f581568317e1a43ceae10f19e7b1f20be1f14e3d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610192806100616000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806382ab890a14610051578063f8a8fd6d146100c5575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100dc565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100d157600080fd5b506100da6100fb565b005b6000808260008082825401925050819055503360005491509150915091565b6000600a90503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101635780600054016000819055505b505600a165627a7a7230582002c1bb7d271edfeb7e7e6113f581568317e1a43ceae10f19e7b1f20be1f14e3d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x192 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x82AB890A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x163 JUMPI DUP1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MUL 0xc1 0xbb PUSH30 0x271EDFEB7E7E6113F581568317E1A43CEAE10F19E7B1F20BE1F14E3D0029 ",
							"sourceMap": "81:838:0:-;;;294:76;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:76:0;352:10;344:5;;:18;;;;;;;;;;;;;;;;;;81:838;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806382ab890a14610051578063f8a8fd6d146100c5575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100dc565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100d157600080fd5b506100da6100fb565b005b6000808260008082825401925050819055503360005491509150915091565b6000600a90503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101635780600054016000819055505b505600a165627a7a7230582002c1bb7d271edfeb7e7e6113f581568317e1a43ceae10f19e7b1f20be1f14e3d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x82AB890A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x163 JUMPI DUP1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MUL 0xc1 0xbb PUSH30 0x271EDFEB7E7E6113F581568317E1A43CEAE10F19E7B1F20BE1F14E3D0029 ",
							"sourceMap": "81:838:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;770:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;770:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:156;;8:9:-1;5:2;;;30:1;27;20:12;5:2;575:156:0;;;;;;770:136;816:7;825:4;853:6;842:7;;:17;;;;;;;;;;;878:10;890:7;;870:28;;;;770:136;;;:::o;575:156::-;623:9;635:2;623:14;;661:10;652:19;;:5;;;;;;;;;;;:19;;;648:76;;;708:4;698:7;;:14;688:7;:24;;;;648:76;575:156;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80400",
								"executionCost": "20395",
								"totalCost": "100795"
							},
							"external": {
								"test()": "20661",
								"update(uint256)": "20738"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 919,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "MSTORE"
								},
								{
									"begin": 294,
									"end": 370,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 294,
									"end": 370,
									"name": "POP"
								},
								{
									"begin": 352,
									"end": 362,
									"name": "CALLER"
								},
								{
									"begin": 344,
									"end": 349,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 344,
									"end": 349,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "EXP"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "DUP2"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "SLOAD"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "DUP2"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "MUL"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "NOT"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "AND"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "SWAP1"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "DUP4"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "AND"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "MUL"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "OR"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "SWAP1"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "SSTORE"
								},
								{
									"begin": 344,
									"end": 362,
									"name": "POP"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "DUP1"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "CODECOPY"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 81,
									"end": 919,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582002c1bb7d271edfeb7e7e6113f581568317e1a43ceae10f19e7b1f20be1f14e3d0029",
									".code": [
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "LT"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "DIV"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "82AB890A"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "F8A8FD6D"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "JUMPI"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 919,
											"name": "REVERT"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "JUMP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP4"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "RETURN"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "JUMP"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "STOP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 825,
											"end": 829,
											"name": "DUP1"
										},
										{
											"begin": 853,
											"end": 859,
											"name": "DUP3"
										},
										{
											"begin": 842,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 842,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "DUP3"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "DUP3"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "SLOAD"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "ADD"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "SWAP3"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "DUP2"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "SSTORE"
										},
										{
											"begin": 842,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 878,
											"end": 888,
											"name": "CALLER"
										},
										{
											"begin": 890,
											"end": 897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 890,
											"end": 897,
											"name": "SLOAD"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "SWAP2"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "SWAP2"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 906,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 623,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 661,
											"end": 671,
											"name": "CALLER"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP1"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SLOAD"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP1"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "EXP"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "SWAP1"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "DIV"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "AND"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "EQ"
										},
										{
											"begin": 648,
											"end": 724,
											"name": "ISZERO"
										},
										{
											"begin": 648,
											"end": 724,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 648,
											"end": 724,
											"name": "JUMPI"
										},
										{
											"begin": 708,
											"end": 712,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "SLOAD"
										},
										{
											"begin": 698,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 688,
											"end": 712,
											"name": "DUP2"
										},
										{
											"begin": 688,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 688,
											"end": 712,
											"name": "SSTORE"
										},
										{
											"begin": 688,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 648,
											"end": 724,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 648,
											"end": 724,
											"name": "JUMPDEST"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 575,
											"end": 731,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d",
							"update(uint256)": "82ab890a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u5408\\u7ea6\\u7ed3\\u6784/SolidityStructure.sol\":\"SolidityStructure\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5408\\u7ea6\\u7ed3\\u6784/SolidityStructure.sol\":{\"keccak256\":\"0xc28929612b95c03b8142e89745e1a591ff2d9dd49b3a064e4d4e02f038be0571\",\"urls\":[\"bzzr://460efc9e4a5117b23ca443b8df8a3c38a1feba9db11da09babc0dfa13546dc75\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "合约结构/SolidityStructure.sol:36:5: Warning: No visibility specified. Defaulting to \"public\". \n    function update(uint amount) constant returns(address, uint) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 906,
					"file": "合约结构/SolidityStructure.sol",
					"start": 770
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "合约结构/SolidityStructure.sol:37:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.\n        balance += amount;\r\n        ^-----^\n",
				"message": "Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 849,
					"file": "合约结构/SolidityStructure.sol",
					"start": 842
				},
				"type": "Warning"
			}
		],
		"sources": {
			"合约结构/SolidityStructure.sol": {
				"ast": {
					"absolutePath": "合约结构/SolidityStructure.sol",
					"exportedSymbols": {
						"SolidityStructure": [
							70
						]
					},
					"id": 71,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "SolidityStructure",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "balance",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "137:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "137:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "177:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "SolidityStructure.Hello",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "helloNum",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "241:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "241:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "hello",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "265:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "265:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Hello",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "199:87:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "315:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 13,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "344:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 14,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "352:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "352:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "344:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "344:18:0"
											}
										]
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:0:0"
									},
									"scope": 70,
									"src": "294:76:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "470:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 22,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "517:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "517:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 24,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "531:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "517:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															88,
															89
														],
														"referencedDeclaration": 88,
														"src": "495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "495:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "495:52:0"
											},
											{
												"id": 28,
												"nodeType": "PlaceholderStatement",
												"src": "558:1:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"name": "onlySeller",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:2:0"
									},
									"src": "448:119:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "598:133:0",
										"statements": [
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"name": "step",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "623:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 33,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "623:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3130",
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "635:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "623:14:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 37,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "652:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "661:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "661:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "652:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 48,
												"nodeType": "IfStatement",
												"src": "648:76:0",
												"trueBody": {
													"id": 47,
													"nodeType": "Block",
													"src": "673:51:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 41,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 42,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "698:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 43,
																		"name": "step",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "708:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "698:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "688:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "688:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 50,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "test",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:0:0"
									},
									"scope": 70,
									"src": "575:156:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "831:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "853:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "842:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "842:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 63,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "878:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "878:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 65,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 66,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "877:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 58,
												"id": 67,
												"nodeType": "Return",
												"src": "870:28:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "786:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "825:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "815:15:0"
									},
									"scope": 70,
									"src": "770:136:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "81:838:0"
						}
					],
					"src": "33:892:0"
				},
				"id": 0
			}
		}
	}
}