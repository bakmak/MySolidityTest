{
	"id": "72f8730070a9d76d028ac0c88e2d9d86",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"存储位置/MemoryToMemory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.0;\r\n\r\ncontract MemoryToMemory{\r\n\r\n    struct S {\r\n        string a;\r\n        uint n;\r\n    }\r\n\r\n    function smemoryTest(S s) internal {\r\n        S memory test = s;\r\n        test.a = \"Test\";\r\n    }\r\n\r\n    function call() returns (string) {\r\n        //  默认是 storage 的\r\n        S memory s = S(\"memory\",10);\r\n        smemoryTest(s);\r\n        return s.a;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"存储位置/MemoryToMemory.sol": {
				"MemoryToMemory": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "call",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"存储位置/MemoryToMemory.sol\":60:423  contract MemoryToMemory{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"存储位置/MemoryToMemory.sol\":60:423  contract MemoryToMemory{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"存储位置/MemoryToMemory.sol\":60:423  contract MemoryToMemory{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x28b5e32b\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"存储位置/MemoryToMemory.sol\":258:418  function call() returns (string) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"存储位置/MemoryToMemory.sol\":258:418  function call() returns (string) {\r... */\n      pop\n      tag_4\n      jump(tag_5)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_6:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_6)\n    tag_7:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":258:418  function call() returns (string) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_9\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_9:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"存储位置/MemoryToMemory.sol\":283:289  string */\n      0x60\n        /* \"存储位置/MemoryToMemory.sol\":337:347  S memory s */\n      tag_10\n      jump\t// in(tag_11)\n    tag_10:\n        /* \"存储位置/MemoryToMemory.sol\":350:364  S(\"memory\",10) */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x6\n      dup2\n      mstore\n      0x20\n      add\n      0x6d656d6f72790000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"存储位置/MemoryToMemory.sol\":361:363  10 */\n      0xa\n        /* \"存储位置/MemoryToMemory.sol\":350:364  S(\"memory\",10) */\n      dup2\n      mstore\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":337:364  S memory s = S(\"memory\",10) */\n      swap1\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":375:389  smemoryTest(s) */\n      tag_13\n        /* \"存储位置/MemoryToMemory.sol\":387:388  s */\n      dup2\n        /* \"存储位置/MemoryToMemory.sol\":375:386  smemoryTest */\n      tag_14\n        /* \"存储位置/MemoryToMemory.sol\":375:389  smemoryTest(s) */\n      jump\t// in\n    tag_13:\n        /* \"存储位置/MemoryToMemory.sol\":407:408  s */\n      dup1\n        /* \"存储位置/MemoryToMemory.sol\":407:410  s.a */\n      0x0\n      add\n      mload\n        /* \"存储位置/MemoryToMemory.sol\":400:410  return s.a */\n      swap2\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":258:418  function call() returns (string) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"存储位置/MemoryToMemory.sol\":153:250  function smemoryTest(S s) internal {\r... */\n    tag_14:\n        /* \"存储位置/MemoryToMemory.sol\":199:212  S memory test */\n      tag_15\n      jump\t// in(tag_11)\n    tag_15:\n        /* \"存储位置/MemoryToMemory.sol\":215:216  s */\n      dup2\n        /* \"存储位置/MemoryToMemory.sol\":199:216  S memory test = s */\n      swap1\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":227:242  test.a = \"Test\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x4\n      dup2\n      mstore\n      0x20\n      add\n      0x5465737400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":227:231  test */\n      dup2\n        /* \"存储位置/MemoryToMemory.sol\":227:233  test.a */\n      0x0\n      add\n        /* \"存储位置/MemoryToMemory.sol\":227:242  test.a = \"Test\" */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"存储位置/MemoryToMemory.sol\":153:250  function smemoryTest(S s) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"存储位置/MemoryToMemory.sol\":60:423  contract MemoryToMemory{\r... */\n    tag_11:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582083afbfcf747643e84a54bed213cb957193e6a34761bf1c920251c9875e2b72790029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d4806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806328b5e32b14610046575b600080fd5b34801561005257600080fd5b5061005b6100d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009b578082015181840152602081019050610080565b50505050905090810190601f1680156100c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606100e061018e565b60408051908101604052806040805190810160405280600681526020017f6d656d6f727900000000000000000000000000000000000000000000000000008152508152602001600a815250905061013681610141565b806000015191505090565b61014961018e565b8190506040805190810160405280600481526020017f546573740000000000000000000000000000000000000000000000000000000081525081600001819052505050565b6040805190810160405280606081526020016000815250905600a165627a7a7230582083afbfcf747643e84a54bed213cb957193e6a34761bf1c920251c9875e2b72790029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x28B5E32B EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x80 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0xE0 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D656D6F72790000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE POP SWAP1 POP PUSH2 0x136 DUP2 PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x18E JUMP JUMPDEST DUP2 SWAP1 POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465737400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP4 0xaf 0xbf 0xcf PUSH21 0x7643E84A54BED213CB957193E6A34761BF1C920251 0xc9 DUP8 0x5e 0x2b PUSH19 0x79002900000000000000000000000000000000 ",
							"sourceMap": "60:363:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:363:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806328b5e32b14610046575b600080fd5b34801561005257600080fd5b5061005b6100d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009b578082015181840152602081019050610080565b50505050905090810190601f1680156100c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606100e061018e565b60408051908101604052806040805190810160405280600681526020017f6d656d6f727900000000000000000000000000000000000000000000000000008152508152602001600a815250905061013681610141565b806000015191505090565b61014961018e565b8190506040805190810160405280600481526020017f546573740000000000000000000000000000000000000000000000000000000081525081600001819052505050565b6040805190810160405280606081526020016000815250905600a165627a7a7230582083afbfcf747643e84a54bed213cb957193e6a34761bf1c920251c9875e2b72790029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x28B5E32B EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x80 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0xE0 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D656D6F72790000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE POP SWAP1 POP PUSH2 0x136 DUP2 PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x18E JUMP JUMPDEST DUP2 SWAP1 POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465737400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP4 0xaf 0xbf 0xcf PUSH21 0x7643E84A54BED213CB957193E6A34761BF1C920251 0xc9 DUP8 0x5e 0x2b PUSH19 0x79002900000000000000000000000000000000 ",
							"sourceMap": "60:363:0:-;;;;;;;;;;;;;;;;;;;;;;;;258:160;;8:9:-1;5:2;;;30:1;27;20:12;5:2;258:160:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;258:160:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:6;337:10;;:::i;:::-;350:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:2;350:14;;;337:27;;375:14;387:1;375:11;:14::i;:::-;407:1;:3;;;400:10;;258:160;;:::o;153:97::-;199:13;;:::i;:::-;215:1;199:17;;227:15;;;;;;;;;;;;;;;;;;:4;:6;;:15;;;;153:97;;:::o;60:363::-;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "93600",
								"executionCost": "141",
								"totalCost": "93741"
							},
							"external": {
								"call()": "infinite"
							},
							"internal": {
								"smemoryTest(struct MemoryToMemory.S memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 423,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "MSTORE"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 423,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582083afbfcf747643e84a54bed213cb957193e6a34761bf1c920251c9875e2b72790029",
									".code": [
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DIV"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "28B5E32B"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "REVERT"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMPDEST"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMPDEST"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP4"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP4"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "AND"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "ISZERO"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMPI"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP4"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "EXP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "NOT"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "AND"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMPDEST"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP3"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP2"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "RETURN"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 289,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 337,
											"end": 347,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 337,
											"end": 347,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 337,
											"end": 347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 347,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 337,
											"end": 347,
											"name": "JUMPDEST"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "6D656D6F72790000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 363,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 337,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 337,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 375,
											"end": 389,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 375,
											"end": 386,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 375,
											"end": 389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 389,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 375,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "ADD"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "MLOAD"
										},
										{
											"begin": 400,
											"end": 410,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 410,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 258,
											"end": 418,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 153,
											"end": 250,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 153,
											"end": 250,
											"name": "JUMPDEST"
										},
										{
											"begin": 199,
											"end": 212,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 199,
											"end": 212,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 199,
											"end": 212,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 199,
											"end": 212,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 199,
											"end": 212,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 216,
											"name": "DUP2"
										},
										{
											"begin": 199,
											"end": 216,
											"name": "SWAP1"
										},
										{
											"begin": 199,
											"end": 216,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "MLOAD"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "PUSH",
											"value": "5465737400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 231,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 233,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 242,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 250,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "MLOAD"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 423,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"call()": "28b5e32b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"call\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u5b58\\u50a8\\u4f4d\\u7f6e/MemoryToMemory.sol\":\"MemoryToMemory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u5b58\\u50a8\\u4f4d\\u7f6e/MemoryToMemory.sol\":{\"keccak256\":\"0x282df8eb54395018ebae0d1a565209defb1e74be68b71a3d597ecd4935ed6782\",\"urls\":[\"bzzr://0c1685f3e405975ee689b3e30d65c499e3b3fe9a90a58502bb5219a27852d462\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "存储位置/MemoryToMemory.sol:16:5: Warning: No visibility specified. Defaulting to \"public\". \n    function call() returns (string) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 418,
					"file": "存储位置/MemoryToMemory.sol",
					"start": 258
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "存储位置/MemoryToMemory.sol:11:5: Warning: Function state mutability can be restricted to pure\n    function smemoryTest(S s) internal {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 250,
					"file": "存储位置/MemoryToMemory.sol",
					"start": 153
				},
				"type": "Warning"
			}
		],
		"sources": {
			"存储位置/MemoryToMemory.sol": {
				"ast": {
					"absolutePath": "存储位置/MemoryToMemory.sol",
					"exportedSymbols": {
						"MemoryToMemory": [
							43
						]
					},
					"id": 44,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "MemoryToMemory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MemoryToMemory.S",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "a",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "112:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "112:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "n",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "131:6:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "131:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "S",
									"nodeType": "StructDefinition",
									"scope": 43,
									"src": "92:53:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "188:62:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"name": "test",
														"nodeType": "VariableDeclaration",
														"scope": 22,
														"src": "199:13:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_S_$6_memory_ptr",
															"typeString": "struct MemoryToMemory.S"
														},
														"typeName": {
															"contractScope": null,
															"id": 11,
															"name": "S",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_S_$6_storage_ptr",
																"typeString": "struct MemoryToMemory.S"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"argumentTypes": null,
													"id": 13,
													"name": "s",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "215:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_S_$6_memory_ptr",
														"typeString": "struct MemoryToMemory.S memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "199:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 15,
															"name": "test",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "227:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_S_$6_memory_ptr",
																"typeString": "struct MemoryToMemory.S memory"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "a",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "54657374",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "236:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
															"typeString": "literal_string \"Test\""
														},
														"value": "Test"
													},
													"src": "227:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory",
														"typeString": "string memory"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "227:15:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "smemoryTest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "174:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_S_$6_memory_ptr",
													"typeString": "struct MemoryToMemory.S"
												},
												"typeName": {
													"contractScope": null,
													"id": 7,
													"name": "S",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 6,
													"src": "174:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_S_$6_storage_ptr",
														"typeString": "struct MemoryToMemory.S"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "173:5:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"scope": 43,
									"src": "153:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "291:127:0",
										"statements": [
											{
												"assignments": [
													28
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "337:10:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_S_$6_memory_ptr",
															"typeString": "struct MemoryToMemory.S"
														},
														"typeName": {
															"contractScope": null,
															"id": 27,
															"name": "S",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "337:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_S_$6_storage_ptr",
																"typeString": "struct MemoryToMemory.S"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "6d656d6f7279",
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "352:8:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44e044a4c3846ae767eb7b4ca1c06f955a682db2a27348c253eca5a62d055cf8",
																"typeString": "literal_string \"memory\""
															},
															"value": "memory"
														},
														{
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "361:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_44e044a4c3846ae767eb7b4ca1c06f955a682db2a27348c253eca5a62d055cf8",
																"typeString": "literal_string \"memory\""
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 29,
														"name": "S",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "350:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_S_$6_storage_ptr_$",
															"typeString": "type(struct MemoryToMemory.S storage pointer)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "350:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_S_$6_memory",
														"typeString": "struct MemoryToMemory.S memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "337:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 35,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "387:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_S_$6_memory_ptr",
																"typeString": "struct MemoryToMemory.S memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_S_$6_memory_ptr",
																"typeString": "struct MemoryToMemory.S memory"
															}
														],
														"id": 34,
														"name": "smemoryTest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "375:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_S_$6_memory_ptr_$returns$__$",
															"typeString": "function (struct MemoryToMemory.S memory)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "375:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "375:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 38,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_S_$6_memory_ptr",
															"typeString": "struct MemoryToMemory.S memory"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "a",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3,
													"src": "407:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 26,
												"id": 40,
												"nodeType": "Return",
												"src": "400:10:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "call",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "283:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "282:8:0"
									},
									"scope": 43,
									"src": "258:160:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "60:363:0"
						}
					],
					"src": "33:390:0"
				},
				"id": 0
			}
		}
	}
}